name: Deploy #Name of the Workflow

on: #Name of the GitHub event that triggers the workflow
  push: #On Push Event We need to take action
    branches: #Now we need to specify the branch name
      - main

jobs: #Workflow run is made up of one or more jobs
  deploy_lambda:
    runs-on: ubuntu-latest #Through which Server OS we need to Work (type of machine to run the job on)
    environment: qa
    steps:
      #Using versioned actions
      - uses: actions/checkout@v4 # --> Reference a specific version
      - uses: actions/setup-node@v4 # --> To Setup the Server With Node Env
        with:
          node-version: '20' #--> Specify the Version of the Node
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3 #--> Setup the Credential for the AWS cli
        with:
          # Created the Secrets Under the Repo only with These Variables
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 #--> Define Region of the AWS-CLI
      - name: Install dependencies
        run: |
          if [ -e yarn.lock ]; then
          yarn install --frozen-lockfile
          elif [ -e package-lock.json ]; then
          npm ci
          else
          npm i
          fi
      - name: build
        run: |
          npm run build
      - name: deploy
        run: |
          zip -j deploy.zip ./build/src/functions/getBlogs/index.js #--> Zip the Code As we know lambda function accept the zip file.
          aws lambda update-function-code --function-name=getBlogsLambda --zip-file=fileb://deploy.zip

# At last the AWS CLI command to Update the Zip file with existing One (With Correct Function Name)
